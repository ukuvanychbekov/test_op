<%=
  render(Primer::Beta::BorderBox.new) do |component|
    component.with_header(color: :muted) do
      render(Primer::Beta::Text.new(font_weight: :semibold)) { I18n.t('storages.file_storage_view.general_information') }
    end

    component.with_row(scheme: :default) do
      render(OpTurbo::FrameComponent.new(id: :storage_general_info_section)) do
        if storage.new_record?
          render(Storages::Admin::Forms::GeneralInfoFormComponent.new(storage))
        else
          render(Storages::Admin::GeneralInfoComponent.new(storage))
        end
      end
    end

    if storage.provider_type_nextcloud?
      component.with_row(scheme: :neutral, color: :muted) do
        grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
          grid.with_area(:item, tag: :div, mr: 3) do
            render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.oauth_applications') }
          end
        end
      end

      component.with_row(scheme: :default) do
        render(OpTurbo::FrameComponent.new(id: :storage_openproject_oauth_section)) do
          if storage.new_record? || openproject_oauth_application_section_closed?
            render(Storages::Admin::OAuthApplicationInfoComponent.new(oauth_application:, storage:))
          else
            render(
              Storages::Admin::OAuthApplicationInfoCopyComponent.new(
                oauth_application:,
                storage:,
                submit_button_path: show_oauth_application_admin_settings_storage_path(storage)
              )
            )
          end
        end
      end

      component.with_row(scheme: :default) do
        render(OpTurbo::FrameComponent.new(id: :storage_oauth_client_section)) do
          render(Storages::Admin::OAuthClientInfoComponent.new(oauth_client: storage.oauth_client, storage:))
        end
      end

      component.with_row(scheme: :neutral, color: :muted) do
        grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
          grid.with_area(:item, tag: :div) do
            render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.project_folders') }
          end
        end
      end

      component.with_row(scheme: :default) do
        render(OpTurbo::FrameComponent.new(id: :automatically_managed_project_folders_section)) do
          if automatically_managed_project_folders_section_closed?
            render(Storages::Admin::AutomaticallyManagedProjectFoldersInfoComponent.new(storage))
          else
            render(Storages::Admin::Forms::AutomaticallyManagedProjectFoldersFormComponent.new(storage))
          end
        end
      end
    end

    if storage.provider_type_one_drive?
      component.with_row(scheme: :neutral, color: :muted) do
        grid_layout('op-storage-view--row', tag: :div, align_items: :center) do |grid|
          grid.with_area(:item, tag: :div, mr: 3) do
            render(Primer::Beta::Text.new(font_weight: :semibold, mr: 1)) { I18n.t('storages.file_storage_view.oauth_applications') }
          end
        end
      end

      component.with_row(scheme: :default) do
        render(OpTurbo::FrameComponent.new(id: :storage_oauth_client_section)) do
          render(Storages::Admin::OAuthClientInfoComponent.new(oauth_client: storage.oauth_client, storage:))
        end
      end

      component.with_row(scheme: :default) do
        render(OpTurbo::FrameComponent.new(id: :storage_redirect_uri_section)) do
          render(Storages::Admin::RedirectUriComponent.new(oauth_client: storage.oauth_client, storage:))
        end
      end
    end
  end
%>
