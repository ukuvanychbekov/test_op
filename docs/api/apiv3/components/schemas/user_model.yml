# Schema: UserModel
---
type: object
required:
  - _type
  - id
  - name
  - avatar
  - _links
properties:
  _type:
    type: string
    enum:
      - User
  id:
    type: integer
    description: User's id
    minimum: 0
  login:
    type: string
    description: |-
      User's login name

      # Conditions

      **Permission**: Administrator, manage_user global permission
    maxLength: 256
  firstName:
    type: string
    description: |-
      User's first name

      # Conditions

      **Permission**: Administrator, manage_user global permission
    maxLength: 30
  lastName:
    type: string
    description: |-
      User's last name

      # Conditions

      **Permission**: Administrator, manage_user global permission
    maxLength: 30
  name:
    type: string
    description: User's full name, formatting depends on instance settings
  email:
    type: string
    description: |-
      User's email address

      # Conditions

      E-Mail address not hidden, **Permission**: Administrator, manage_user global permission
    maxLength: 60
  admin:
    type: boolean
    description: |-
      Flag indicating whether or not the user is an admin

      # Conditions

      **Permission**: Administrator
  avatar:
    type: string
    format: uri
    description: URL to user's avatar
  status:
    type: string
    description: The current activation status of the user (see below)
  language:
    type: string
    description: |-
      User's language | ISO 639-1 format

      # Conditions

      **Permission**: Administrator, manage_user global permission
  identityUrl:
    type:
      - 'string'
      - 'null'
    description: |-
      User's identity_url for OmniAuth authentication

      # Conditions

      **Permission**: Administrator
  createdAt:
    type: string
    format: date-time
    description: Time of creation
  updatedAt:
    type: string
    format: date-time
    description: Time of the most recent change to the user
  _links:
    type: object
    required:
      - self
      - memberships
      - showUser
    properties:
      self:
        allOf:
          - "$ref": "./link.yml"
          - description: |-
              This user

              **Resource**: User
      memberships:
        allOf:
          - "$ref": "./link.yml"
          - description: |-
              Link to collection of all the user's memberships. The list will only include the memberships in projects in which the requesting user has the necessary permissions.

              **Resource**: MemberCollection

              # Conditions

              **Permission**: view members or manage members in any project
      showUser:
        allOf:
          - "$ref": "./link.yml"
          - description: Link to the OpenProject user page (HTML)
      updateImmediately:
        allOf:
          - "$ref": "./link.yml"
          - description: |-
              Updates the user's attributes.

              # Conditions

              **Permission**: Administrator, manage_user global permission
      lock:
        allOf:
          - "$ref": "./link.yml"
          - description: |-
              Restrict the user from logging in and performing any actions

              # Conditions

              not locked; **Permission**: Administrator
      unlock:
        allOf:
          - "$ref": "./link.yml"
          - description: |-
              Allow a locked user to login and act again

              # Conditions

              locked; **Permission**: Administrator
      delete:
        allOf:
          - "$ref": "./link.yml"
          - description: |-
              Permanently remove a user from the instance

              # Conditions

              **Permission**: Administrator, self-delete

example:
  _type: User
  id: 1
  name: John Sheppard
  login: j.sheppard
  firstName: John
  lastName: Sheppard
  email: shep@mail.com
  admin: true
  avatar: https://example.org/users/1/avatar
  status: active
  identityUrl: null,
  language: en
  createdAt: '2014-05-21T08:51:20.396Z'
  updatedAt: '2014-05-21T08:51:20.396Z'
  _links:
    self:
      href: '/api/v3/users/1'
      title: John Sheppard
    memberships:
      href: /api/v3/memberships?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D,
      title: Members
    showUser:
      href: '/users/1'
      type: text/html
    lock:
      href: '/api/v3/users/1/lock'
      title: Set lock on John Sheppard
      method: post
    updateImmediately:
      href: '/api/v3/users/1'
      title: update John Sheppard
      method: patch
    delete:
      href: '/api/v3/users/1'
      title: delete John Sheppard
    method: delete
